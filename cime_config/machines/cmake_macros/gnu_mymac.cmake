set(CXX_LINKER "CXX")
set(NETCDF_PATH "$ENV{NETCDF_PATH}")
set(NETCDF_C_PATH "$ENV{NETCDF_C_PATH}")
set(NETCDF_FORTRAN_PATH "$ENV{NETCDF_FORTRAN_PATH}")
set(HDF5_PATH "$ENV{HDF5_PATH}")
set(BLASLAPACK_LIBDIR "$ENV{BLASLAPACK_LIBDIR}")
string(APPEND FFLAGS " -fallow-argument-mismatch")
string(APPEND CFLAGS " -I${NETCDF_C_PATH}/include -I${HDF5_PATH}/include")
string(APPEND FFLAGS " -I${NETCDF_FORTRAN_PATH}/include -I${NETCDF_C_PATH}/include -I${HDF5_PATH}/include")
string(APPEND LDFLAGS " -framework Accelerate")
if (COMP_CLASS STREQUAL cpl)
  string(APPEND LDFLAGS " -L${BLASLAPACK_LIBDIR} -llapack -lblas")
endif()
execute_process(COMMAND ${NETCDF_C_PATH}/bin/nc-config --libs OUTPUT_VARIABLE SHELL_CMD_OUTPUT_BUILD_INTERNAL_IGNORE0 OUTPUT_STRIP_TRAILING_WHITESPACE)
string(APPEND SLIBS " ${SHELL_CMD_OUTPUT_BUILD_INTERNAL_IGNORE0}")
execute_process(COMMAND ${NETCDF_FORTRAN_PATH}/bin/nf-config --flibs OUTPUT_VARIABLE SHELL_CMD_OUTPUT_BUILD_INTERNAL_IGNORE0 OUTPUT_STRIP_TRAILING_WHITESPACE)
string(APPEND SLIBS " ${SHELL_CMD_OUTPUT_BUILD_INTERNAL_IGNORE0}")
string(APPEND SLIBS " ${HDF5_PATH}/lib")

